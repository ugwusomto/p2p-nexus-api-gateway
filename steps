1. Implement auth module and implement register and login function
2. configure api gateway to send out the request to the user service through a transport layer
3. add redis package for transport layer and nest microservice 
4. Add transporters and export module 
5. Add injection token options
6. add npm i --save @nestjs/config for env file read
7. setup the user service client 
8. Add global pipe validation / dto
9. Added register dto and login dto 
10. Install ioredis
11. Add exception filter for structuring our exceptions messages
12. Add interceptors to organize our respose as well
13. Test out the request without providing the user service to consume it 
14. Talk about how the redis server works and doesn't keep a log of the message for the service to consume once it comes up
15. Share that we can use Redis Stream that keeps a log of the message , - redis uses a fire-forget mode 
16. Set timeout to your transport and retry options


Go BACK TO USER SERVICE ( start from no 1)

17. Work on the login route and service to send request to user service
18. Install passport - npm install --save @nestjs/passport passport passport-local
19. Install types - npm install --save-dev @types/passport-local
20. Setup local strategy
21. Setup guard
22. Set up jwt - npm install --save @nestjs/jwt passport-jwt & npm install --save-dev @types/passport-jwt
23. Setup middleware for authenticating route

Go BACK TO USER SERVICE ( start from no 10)

